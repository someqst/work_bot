from loader import db
from database.models import Work
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types.keyboard_button import KeyboardButton
from aiogram.types.reply_keyboard_remove import ReplyKeyboardRemove
from aiogram.types.reply_keyboard_markup import ReplyKeyboardMarkup
from aiogram.types.inline_keyboard_button import InlineKeyboardButton




async def build_start_kb(first_log_in: bool, role: str | None = None) -> InlineKeyboardBuilder:
    start_kb = InlineKeyboardBuilder()
    if first_log_in:
        start_kb.button(text='–†–∞–±–æ—Ç–Ω–∏–∫', callback_data='im_worker')
        start_kb.button(text='–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å', callback_data='im_employeer')
        return start_kb
    
    if role == 'worker':
        start_kb.button(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', callback_data='check_available_works')
        start_kb.button(text='–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å', callback_data='profile_call')
        return start_kb
    
    if role == 'employeer':
        start_kb.button(text='–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ', callback_data='add_work')
        start_kb.button(text='–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å', callback_data='profile_call')
        return start_kb
    

async def build_profile_kb(user_id, role: str) -> InlineKeyboardBuilder:
    profile_kb = InlineKeyboardBuilder()
    
    if role == 'worker':
        jobs = await db.select_worker_jobs(user_id)
        profile_kb.button(text='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è', callback_data='edit_user_settings')
        profile_kb.button(text='–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ üí∞', callback_data='profile_call')
        profile_kb.button(text=f'–ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞–±–æ—Ç—ã ({len(jobs)})', callback_data='get_my_jobs_wrk')
        return profile_kb
    
    if role == 'employeer':
        jobs = await db.select_employeer_jobs(user_id)
        profile_kb.button(text='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è', callback_data='edit_user_settings')
        profile_kb.button(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å üí∞', callback_data='profile_call')
        profile_kb.button(text=f'–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è ({len(jobs)})', callback_data='get_my_jobs_emp')
        return profile_kb
    

async def build_jobs_kb(user_id, role: str) -> InlineKeyboardBuilder:
    jobs_kb = InlineKeyboardBuilder()

    if role == 'employeer':
        jobs = await db.select_employeer_jobs(user_id)
        role = 'employeer'
    else:
        jobs = await db.select_worker_jobs(user_id)
        role = 'worker'

    if jobs:
        for job in jobs:
            jobs_kb.button(text=f'{job.title[:30]}... - {job.price}', callback_data=f'{role}_select_{job.id}')
    jobs_kb.adjust(1)

    jobs_kb.row(InlineKeyboardButton(text=f'–ù–∞–∑–∞–¥ ‚óÄÔ∏è', callback_data=f'profile_call'))
    return jobs_kb


async def build_works_kb(works: list[Work]) -> InlineKeyboardBuilder:
    kb = InlineKeyboardBuilder()
    for work in works:
        kb.button(text=f'{work.title[:30]}... - {work.price}', callback_data=f'wrk_{work.id}')
    kb.adjust(1)
    return kb


async def build_ok_kb(work_id) -> InlineKeyboardBuilder:
    kb = InlineKeyboardBuilder()
    kb.button(text='–í–∑—è—Ç—å –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ ‚úÖ', callback_data=f'ok_{work_id}')
    return kb


async def build_approve_kb(work_id, worker_id) -> InlineKeyboardBuilder:
    kb = InlineKeyboardBuilder()
    kb.button(text='–ü—Ä–∏–Ω—è—Ç—å ‚úÖ', callback_data=f'app_{work_id}_{worker_id}')
    return kb


async def build_check_kb(work_id, employeer_id) -> InlineKeyboardBuilder:
    kb = InlineKeyboardBuilder()
    kb.button(text='–£—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ ‚ùî', callback_data=f'qst_{work_id}_{employeer_id}')
    kb.button(text='–ì–æ—Ç–æ–≤–æ ‚úÖ', callback_data=f'done_{work_id}_{employeer_id}')
    kb.adjust(1)
    return kb


async def build_chat_kb(owner_id, worker_id, role) -> InlineKeyboardBuilder:
    kb = InlineKeyboardBuilder()
    # role - —ç—Ç–æ –∫–æ–º—É
    if role == 'employeer':
        kb.button(text='–í–æ–π—Ç–∏ –≤ —á–∞—Ç', callback_data=f'join_emp_{owner_id}_{worker_id}')
    else:
        kb.button(text='–í–æ–π—Ç–∏ –≤ —á–∞—Ç', callback_data=f'join_wrk_{owner_id}_{worker_id}')
    return kb


async def build_done_work_kb(work_id) -> InlineKeyboardBuilder:
    kb = InlineKeyboardBuilder()
    kb.button(text='–û—Ç–ª–∏—á–Ω–æ ‚úÖ', callback_data=f'approve_{work_id}')
    kb.button(text='–£—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ ‚ùî', callback_data=f'ask_worker_{work_id}')
    kb.button(text='–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå', callback_data=f'declince_{work_id}')
    kb.adjust(1)
    return kb


async def build_support_kb(work_id) -> InlineKeyboardBuilder:
    kb = InlineKeyboardBuilder()
    kb.button(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–º–µ–Ω—É', callback_data=f'des_ok_{work_id}')
    kb.button(text='–û—Ç–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é', callback_data=f'des_no_{work_id}')
    kb.adjust(1)
    return kb


select_role = InlineKeyboardBuilder()
select_role.button(text='–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å', callback_data='im_employeer')
select_role.button(text='–†–∞–±–æ—Ç–Ω–∏–∫', callback_data='im_worker')
select_role.adjust(1)


change_job_kb = InlineKeyboardBuilder()
change_job_kb.button(text='–õ–æ–∫–∞—Ü–∏—è', callback_data='change_location_emp')
change_job_kb.button(text='–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã', callback_data='change_work_time_emp')
change_job_kb.button(text='–¶–µ–Ω–∞', callback_data='change_work_price_emp')
change_job_kb.button(text='–ó–∞–≥–æ–ª–æ–≤–æ–∫', callback_data='change_work_title_emp')
change_job_kb.button(text='–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='change_work_descriprion_emp')
change_job_kb.button(text='–†–∞–∑–º–µ—Å—Ç–∏—Ç—å ‚úÖ', callback_data='publish_work_emp')
change_job_kb.adjust(1)


settings_kb = InlineKeyboardBuilder()
settings_kb.button(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å', callback_data='change_role')
settings_kb.button(text='–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é', callback_data='change_location')
settings_kb.button(text='–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è', callback_data='change_about')
settings_kb.adjust(1)


online_work = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–û–Ω–ª–∞–π–Ω')]])
online_work.resize_keyboard = True

remove_reply_kb = ReplyKeyboardRemove()


admin_kb = InlineKeyboardBuilder()
admin_kb.button(text='–í—ã–¥–∞—Ç—å –±–∞–ª–∞–Ω—Å employeer', callback_data='give_money_employeer')


